name: Deploy and Manage Hetzner VM with Ansible

on:
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  terraform:
    name: Terraform Apply
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.0

      - name: Configure Terraform Cloud credentials
        run: |
          echo "credentials \"app.terraform.io\" { token = \"${{ secrets.TFC_TOKEN }}\" }" > ~/.terraformrc

      # Navigate to the terraform folder before running commands
      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform

      - name: Terraform Plan
        run: terraform plan
        working-directory: ./terraform
        env:
          # Pass required variables to Terraform Cloud using TF_VAR_ prefix
          TF_VAR_hcloud_token: ${{ secrets.HCLOUD_TOKEN }}
          TF_VAR_floating_ip_id: ${{ secrets.FLOATING_IP_ID }}
          TF_VAR_ssh_key_name: ${{ secrets.SSH_KEY_NAME }}
          TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ./terraform
        env:
          # Pass required variables to Terraform Cloud using TF_VAR_ prefix
          TF_VAR_hcloud_token: ${{ secrets.HCLOUD_TOKEN }}
          TF_VAR_floating_ip_id: ${{ secrets.FLOATING_IP_ID }}
          TF_VAR_ssh_key_name: ${{ secrets.SSH_KEY_NAME }}
          TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}

      - name: Get Terraform Output (Floating IP)
        id: terraform_output
        run: echo "floating_ip=$(terraform output -raw floating_ip)" >> $GITHUB_ENV
        working-directory: ./terraform

  ansible:
    name: Configure VM with Ansible
    runs-on: ubuntu-latest
    needs: terraform

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Ansible
        run: sudo apt update && sudo apt install -y ansible

      - name: Add Private SSH Key for Ansible
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Run Ansible Playbook
        run: |
          echo "[hetzner_vm]" > ansible/inventory.ini
          echo "${{ env.floating_ip }}" >> ansible/inventory.ini
          ansible-playbook -i ansible/inventory.ini ansible/playbook.yml
        env:
          ANSIBLE_SSH_PRIVATE_KEY_FILE: ~/.ssh/id_rsa
